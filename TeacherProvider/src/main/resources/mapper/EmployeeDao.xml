<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ali.dao.EmployeeDao">

    <resultMap type="com.ali.entity.Employee" id="EmployeeMap">
        <result property="eid" column="eid" jdbcType="INTEGER"/>
        <result property="uid" column="uid" jdbcType="INTEGER"/>
        <result property="educationid" column="educationid" jdbcType="INTEGER"/>
        <result property="sex" column="sex" jdbcType="VARCHAR"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <result property="addr" column="addr" jdbcType="VARCHAR"/>
        <result property="specialty" column="specialty" jdbcType="VARCHAR"/>
        <result property="teacherbron" column="teacherBron" jdbcType="VARCHAR"/>
        <result property="idcard" column="IDCard" jdbcType="VARCHAR"/>
        <result property="bak1" column="bak1" jdbcType="VARCHAR"/>
        <result property="bak2" column="bak2" jdbcType="VARCHAR"/>
        <result property="bak3" column="bak3" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="EmployeeMap">
        select
          eid, uid, educationid, sex, age, addr, specialty, teacherBron, IDCard, bak1, bak2, bak3
        from school.employee
        where eid = #{eid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="EmployeeMap">
        select
          eid, uid, educationid, sex, age, addr, specialty, teacherBron, IDCard, bak1, bak2, bak3
        from school.employee
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="EmployeeMap">
        select
        eid, uid, educationid, sex, age, addr, specialty, teacherBron, IDCard, bak1, bak2, bak3
        from school.employee
        <where>
            <if test="eid != null">
                and eid = #{eid}
            </if>
            <if test="uid != null">
                and uid = #{uid}
            </if>
            <if test="educationid != null">
                and educationid = #{educationid}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
            <if test="addr != null and addr != ''">
                and addr = #{addr}
            </if>
            <if test="specialty != null and specialty != ''">
                and specialty = #{specialty}
            </if>
            <if test="teacherbron != null and teacherbron != ''">
                and teacherBron = #{teacherbron}
            </if>
            <if test="idcard != null and idcard != ''">
                and IDCard = #{idcard}
            </if>
            <if test="bak1 != null and bak1 != ''">
                and bak1 = #{bak1}
            </if>
            <if test="bak2 != null and bak2 != ''">
                and bak2 = #{bak2}
            </if>
            <if test="bak3 != null and bak3 != ''">
                and bak3 = #{bak3}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="eid" useGeneratedKeys="true">
        insert into school.employee(uid, educationid, sex, age, addr, specialty, teacherBron, IDCard, bak1, bak2, bak3)
        values (#{uid}, #{educationid}, #{sex}, #{age}, #{addr}, #{specialty}, #{teacherbron}, #{idcard}, #{bak1}, #{bak2}, #{bak3})
    </insert>

    <insert id="insertBatch" keyProperty="eid" useGeneratedKeys="true">
        insert into school.employee(uid, educationid, sex, age, addr, specialty, teacherBron, IDCard, bak1, bak2, bak3)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.uid}, #{entity.educationid}, #{entity.sex}, #{entity.age}, #{entity.addr}, #{entity.specialty},
            #{entity.teacherbron}, #{entity.idcard}, #{entity.bak1}, #{entity.bak2}, #{entity.bak3})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="eid" useGeneratedKeys="true">
        insert into school.employee(uid, educationid, sex, age, addr, specialty, teacherBron, IDCard, bak1, bak2, bak3)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.uid}, #{entity.educationid}, #{entity.sex}, #{entity.age}, #{entity.addr}, #{entity.specialty},
            #{entity.teacherbron}, #{entity.idcard}, #{entity.bak1}, #{entity.bak2}, #{entity.bak3})
        </foreach>
        on duplicate key update
        uid = values(uid) , educationid = values(educationid) , sex = values(sex) , age = values(age) , addr =
        values(addr) , specialty = values(specialty) , teacherBron = values(teacherBron) , IDCard = values(IDCard) ,
        bak1 = values(bak1) , bak2 = values(bak2) , bak3 = values(bak3)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update school.employee
        <set>
            <if test="uid != null">
                uid = #{uid},
            </if>
            <if test="educationid != null">
                educationid = #{educationid},
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="addr != null and addr != ''">
                addr = #{addr},
            </if>
            <if test="specialty != null and specialty != ''">
                specialty = #{specialty},
            </if>
            <if test="teacherbron != null and teacherbron != ''">
                teacherBron = #{teacherbron},
            </if>
            <if test="idcard != null and idcard != ''">
                IDCard = #{idcard},
            </if>
            <if test="bak1 != null and bak1 != ''">
                bak1 = #{bak1},
            </if>
            <if test="bak2 != null and bak2 != ''">
                bak2 = #{bak2},
            </if>
            <if test="bak3 != null and bak3 != ''">
                bak3 = #{bak3},
            </if>
        </set>
        where eid = #{eid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from school.employee where eid = #{eid}
    </delete>

</mapper>